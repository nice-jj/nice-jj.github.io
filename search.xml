<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[IP地址和子网掩码]]></title>
      <url>http://www.nice-jj.com/2017/04/18/IP%E5%92%8C%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>很久没有更新博客了，比较懒！说出来你可能不信，虽然自己是计算机网络专业，但我并不知道子网掩码和IP之间的关系，上周花了点时间简单学习了一下。</p>
<h2 id="一、常用的三类IP和默认的子网掩码"><a href="#一、常用的三类IP和默认的子网掩码" class="headerlink" title="一、常用的三类IP和默认的子网掩码"></a>一、常用的三类IP和默认的子网掩码</h2><p>A类：0.0.0.0-127.255.255.255<br>B类：128.0.0.0-191.255.255.255<br>C类：192.0.0.0-223.255.255.255</p>
<p>A类默认子网掩码：255.0.0.0<br>B类默认子网掩码：255.255.0.0<br>C类默认子网掩码：255.255.255.0</p>
<h2 id="二、子网掩码为255-255-255-0可容纳多少台主机"><a href="#二、子网掩码为255-255-255-0可容纳多少台主机" class="headerlink" title="二、子网掩码为255.255.255.0可容纳多少台主机"></a>二、子网掩码为255.255.255.0可容纳多少台主机</h2><p>将255.255.255.0转换为二进制，可使用windows的计算器，也可以使用“除2取余，逆序排列”的方法,每段8位，不够用0补，<br>255.255.255.0的二进制为11111111.11111111.11111111.00000000，再举例：<br>255.255.248.0的二进制为11111111.11111111.11111000.00000000，<br>主机的计算公式为2的m次方，m为0的个数，则：<br>255.255.255.0的主机个数为2的8次方，也就是可容纳256台主机，再减去网络地址和广播地址，所以最后可容纳的主机为254</p>
<h2 id="三、192-168-1-0-26的“-26”是怎么来的"><a href="#三、192-168-1-0-26的“-26”是怎么来的" class="headerlink" title="三、192.168.1.0/26的“/26”是怎么来的"></a>三、192.168.1.0/26的“/26”是怎么来的</h2><p>192.168.1.0/26的原型为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">192.168.1.0</div><div class="line">255.255.255.192</div></pre></td></tr></table></figure></p>
<p>把255.255.255.192换算为二进制：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">11111111.11111111.11111111.11000000</div></pre></td></tr></table></figure></p>
<p>可看到二进制一共有26个1，所以可以写成192.168.1.0/26来代替</p>
<h2 id="四、计算出192-168-0-0-22的地址段和子网掩码"><a href="#四、计算出192-168-0-0-22的地址段和子网掩码" class="headerlink" title="四、计算出192.168.0.0/22的地址段和子网掩码"></a>四、计算出192.168.0.0/22的地址段和子网掩码</h2><blockquote>
<p>“/22”表示子网掩码的二进制为22个1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">11111111.11111111.11111100.00000000</div></pre></td></tr></table></figure></p>
<p>转为十进制可得出常见的子网掩码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">255.255.252.0</div></pre></td></tr></table></figure></p>
<p>根据子网掩码的二进制“0”的位数，可计算出IP地址段为2的10次方，也就是1024个IP地址，1024再除以256，可计算出192.168.0.0/22的地址段为192.168.0.0-192.168.3.255</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 计算机网络 </category>
            
            <category> IP地址和子网掩码 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux账户管理]]></title>
      <url>http://www.nice-jj.com/2017/02/28/Linux%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<h1 id="一、-etc-passwd文件"><a href="#一、-etc-passwd文件" class="headerlink" title="一、/etc/passwd文件"></a>一、/etc/passwd文件</h1><p>/etc/passwd文件是Linux/UNIX安全的关键文件之一.该文件用于用户登录时校验 用户的口令,当然应当仅对root可写.文件中每行的一般格式为: </p>
<p>LOGNAME:PASSWORD:UID:GID:USERINFO:HOME:SHELL </p>
<p>每行的头两项是登录名和加密后的口令,后面的两个数是UID和GID,接着的一项是系统管理员想写入的有关该用户的任何信息,最后两项是两个路径名: 一个是分配给用户的HOME目录,第二个是用户登录后将执行的shell(若为空格则缺省为/bin/bash)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@localhost init.d]# cat /etc/passwd</div><div class="line">root:x:0:0:root:/root:/bin/bash</div><div class="line">bin:x:1:1:bin:/bin:/sbin/nologin</div><div class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</div><div class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</div><div class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</div><div class="line">sync:x:5:0:sync:/sbin:/bin/sync</div><div class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</div><div class="line">halt:x:7:0:halt:/sbin:/sbin/halt</div><div class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</div><div class="line">uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin</div><div class="line">operator:x:11:0:operator:/root:/sbin/nologin</div><div class="line">games:x:12:100:games:/usr/games:/sbin/nologin</div><div class="line">gopher:x:13:30:gopher:/var/gopher:/sbin/nologin</div><div class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</div><div class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</div><div class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</div><div class="line">vcsa:x:69:69:virtual console memory owner:/dev:/sbin/nologin</div><div class="line">saslauth:x:499:76:&quot;Saslauthd user&quot;:/var/empty/saslauth:/sbin/nologin</div><div class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</div><div class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</div></pre></td></tr></table></figure></p>
<p>每行代表一个用户，用冒号分隔来定义用户的属性,以第一行“root:x:0:0:root:/root:/bin/bash”为例，依次说明：  </p>
<ul>
<li>root代表登录名称。  </li>
<li>x代表密码，但实际密码存放于/etc/shadow文件中，如果是*表示不能登录，如果为空是不需要密码即可登录。</li>
<li>此项表示用户ID，是用户在内核中的唯一标识。</li>
<li>用户组ID，是/etc/group用户组中的ID，用户组可定义用户的权限。</li>
<li>用户的真正名称，包含用户的一些信息，如用户的真实姓名，电话等。</li>
<li>用户的主目录，当用户登录后，将此目录作为工作目录。</li>
<li>用户使用的命令行，即用户在登录后运行的终端程序。当设置为/sbin/nologin时表示此账户不可登录。<br>其中超级用户root的UID和GID为0，有一些用户没有登录权限，nobody的权限最小，它没有写入权限，为了安全考虑，可以用它来运行一些程序。  </li>
</ul>
<h1 id="二、-etc-shadow文件"><a href="#二、-etc-shadow文件" class="headerlink" title="二、/etc/shadow文件"></a>二、/etc/shadow文件</h1><p>此文件存放着Linux用户的密码，包含用户的验证信息、经过加密的密码、密码过期日期等。</p>
<p>文件格式与/etc/passwd类似，字段之间用冒号分隔。<br>格式：  </p>
<blockquote>
<p>登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@localhost init.d]# cat /etc/shadow</div><div class="line">root:$6$QcYGGtNvT5/BAXCP$CBZHUaReIswP1sD9Tik/WvF1dZErMzAVd5f9ybJnPW/lGX.ikAVSOWQMzm9pyxvew8u6Kw2MGW70FuDV9Yvp1/:17204:0:99999:7:::</div><div class="line">bin:*:15628:0:99999:7:::</div><div class="line">daemon:*:15628:0:99999:7:::</div><div class="line">adm:*:15628:0:99999:7:::</div><div class="line">lp:*:15628:0:99999:7:::</div><div class="line">sync:*:15628:0:99999:7:::</div><div class="line">shutdown:*:15628:0:99999:7:::</div><div class="line">halt:*:15628:0:99999:7:::</div><div class="line">mail:*:15628:0:99999:7:::</div><div class="line">uucp:*:15628:0:99999:7:::</div><div class="line">operator:*:15628:0:99999:7:::</div><div class="line">games:*:15628:0:99999:7:::</div><div class="line">gopher:*:15628:0:99999:7:::</div><div class="line">ftp:*:15628:0:99999:7:::</div><div class="line">nobody:*:15628:0:99999:7:::</div><div class="line">dbus:!!:17204::::::</div><div class="line">vcsa:!!:17204::::::</div><div class="line">saslauth:!!:17204::::::</div><div class="line">postfix:!!:17204::::::</div><div class="line">sshd:!!:17204::::::</div></pre></td></tr></table></figure>
<p>以第一行root为例，依次说明：  </p>
<ul>
<li>“登录名”是与/etc/passwd文件中的登录名相一致的用户账号</li>
<li>“口令”字段放的是用户的密码，如果为空，则对应的用户不需要密码即可登录。如果是*代表帐号被锁定，是！！表示这个密码已经过期。  <blockquote>
<p>$1$ 表明是用MD5加密的<br>$2$ 是用Blowfish加密的<br>$5$ 是用SHA-256加密的<br>$6$开头的，表明是用SHA-512加密的  </p>
</blockquote>
</li>
<li>“最后一次修改时间”表示的是从某个时刻起，到用户最后一次修改口令时的天数</li>
<li>“最小时间间隔”指的是两次修改口令之间所需的最小天数</li>
<li>“最大时间间隔”指的是口令保持有效的最大天数</li>
<li>“警告时间”字段表示的是从系统开始警告用户到用户密码正式失效之间的天数</li>
<li>“不活动时间”表示的是用户没有登录活动但账号仍能保持有效的最大天数</li>
<li>“失效时间”字段给出的是一个绝对的天数，如果使用了这个字段，那么就给出相应账号的生存期。期满后，该账号就不再是一个合法的账号，也就不能再用来登录了  </li>
</ul>
<h1 id="三、-etc-group文件"><a href="#三、-etc-group文件" class="headerlink" title="三、/etc/group文件"></a>三、/etc/group文件</h1><p>用户组所有的所有信息都存放在该文件中，格式如下：  </p>
<blockquote>
<p>组名:口令:组标识号:组内用户列表  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@localhost etc]# cat /etc/group</div><div class="line">root:x:0:</div><div class="line">bin:x:1:bin,daemon</div><div class="line">daemon:x:2:bin,daemon</div><div class="line">sys:x:3:bin,adm</div><div class="line">adm:x:4:adm,daemon</div><div class="line">tty:x:5:</div><div class="line">disk:x:6:</div><div class="line">lp:x:7:daemon</div><div class="line">mem:x:8:</div><div class="line">kmem:x:9:</div><div class="line">wheel:x:10:</div><div class="line">mail:x:12:mail,postfix</div><div class="line">uucp:x:14:</div><div class="line">man:x:15:</div><div class="line">games:x:20:</div><div class="line">gopher:x:30:</div><div class="line">video:x:39:</div><div class="line">dip:x:40:</div><div class="line">ftp:x:50:</div><div class="line">lock:x:54:</div><div class="line">audio:x:63:</div><div class="line">nobody:x:99:</div><div class="line">users:x:100:</div><div class="line">utmp:x:22:</div><div class="line">utempter:x:35:</div><div class="line">dbus:x:81:</div><div class="line">floppy:x:19:</div><div class="line">vcsa:x:69:</div><div class="line">cdrom:x:11:</div><div class="line">tape:x:33:</div><div class="line">dialout:x:18:</div><div class="line">saslauth:x:76:</div><div class="line">postdrop:x:90:</div><div class="line">postfix:x:89:</div><div class="line">sshd:x:74:</div></pre></td></tr></table></figure>
<p>具体解释：  </p>
<ul>
<li>组名：是用户组的名称，由字母或数字组成</li>
<li>口令：存放用户组加密后的口令，一般这个字段为空或为*</li>
<li>组标识号：组标识号跟用户的标识号一个意思，被系统内部用来标识组，别称GID</li>
<li>组内用户列表：存放属于这个组的用户，不同的用户用逗号（,）分隔  </li>
</ul>
<p>一些常见用户组的作用：</p>
<ul>
<li>root组：超级用户组，具有最高权限</li>
<li>bin组：此用户组可管理大部分命令</li>
<li>daemon组：可管理后台进程</li>
<li>sys组：可管理系统文件</li>
<li>adm组：类似 wheel 的管理器群组，这个组的权限允许该组成员不用 su 就能读取日志文件</li>
<li>tty组：操作ttyAMA0串口</li>
<li>lp组：访问打印设备，管理打印服务</li>
<li>whell组：管理组，通常用于　sudo　和 su 命令权限</li>
</ul>
<h1 id="四、-etc-gshadow文件"><a href="#四、-etc-gshadow文件" class="headerlink" title="四、/etc/gshadow文件"></a>四、/etc/gshadow文件</h1><p>/etc/gshadow是/etc/group的加密资讯文件,用户组的管理密码存放在这个文件中。<br>格式如下：  </p>
<blockquote>
<p>组名：口令：组管理者：组内用户列表  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@localhost etc]# cat /etc/gshadow</div><div class="line">root:::</div><div class="line">bin:::bin,daemon</div><div class="line">daemon:::bin,daemon</div><div class="line">sys:::bin,adm</div><div class="line">adm:::adm,daemon</div><div class="line">tty:::</div><div class="line">disk:::</div><div class="line">lp:::daemon</div><div class="line">mem:::</div><div class="line">kmem:::</div><div class="line">wheel:::</div><div class="line">mail:::mail,postfix</div><div class="line">uucp:::</div><div class="line">man:::</div><div class="line">games:::</div><div class="line">gopher:::</div><div class="line">video:::</div><div class="line">dip:::</div><div class="line">ftp:::</div><div class="line">lock:::</div><div class="line">audio:::</div><div class="line">nobody:::</div><div class="line">users:::</div><div class="line">utmp:!::</div><div class="line">utempter:!::</div><div class="line">dbus:!::</div><div class="line">floppy:!::</div><div class="line">vcsa:!::</div><div class="line">cdrom:!::</div><div class="line">tape:!::</div><div class="line">dialout:!::</div><div class="line">saslauth:!::</div><div class="line">postdrop:!::</div><div class="line">postfix:!::</div><div class="line">sshd:!::</div></pre></td></tr></table></figure>
<p>具体解释：  </p>
<ul>
<li>组名：是用户组的名称，由字母或数字构成</li>
<li>口令：用户组密码，这个段可以是空的或!，如果是空的或有!，表示没有密码</li>
<li>组管理者：这个字段也可为空，如果有多个用户组管理者，用逗号（,）分割 </li>
<li>组内用户列表：如果有多个成员，用逗号（,）分割  </li>
</ul>
<h1 id="五、-etc-default-useradd文件"><a href="#五、-etc-default-useradd文件" class="headerlink" title="五、/etc/default/useradd文件"></a>五、/etc/default/useradd文件</h1><p>/etc/default/useradd为在创建用户时使用的规则文件，即使用useradd添加用户不使用任何参数时，将读取此文件的配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@localhost etc]# cat /etc/default/useradd </div><div class="line"># useradd defaults file</div><div class="line">GROUP=100</div><div class="line">HOME=/home</div><div class="line">INACTIVE=-1</div><div class="line">EXPIRE=</div><div class="line">SHELL=/bin/bash</div><div class="line">SKEL=/etc/skel</div><div class="line">CREATE_MAIL_SPOOL=yes</div></pre></td></tr></table></figure></p>
<p>具体解释：</p>
<ul>
<li>GROUP=100<blockquote>
<p>用户组ID</p>
</blockquote>
</li>
<li>HOME=/home<blockquote>
<p>用户的主目录</p>
</blockquote>
</li>
<li>INACTIVE=-1<blockquote>
<p>是否启用帐号过期停权，-1表示不启用</p>
</blockquote>
</li>
<li>EXPIRE=<blockquote>
<p>帐号终止日期，不设置表示不启用</p>
</blockquote>
</li>
<li>SHELL=/bin/bash<blockquote>
<p>新建账户使用shell的种类，默认使用bash</p>
</blockquote>
</li>
<li>SKEL=/etc/skel<blockquote>
<p>默认添加用户的目录默认文件存放位置。也就是说，当用户用useradd添加用户时，用户主目录下的文件都是从这个目录中复制的</p>
</blockquote>
</li>
<li>CREATE_MAIL_SPOOL=yes<blockquote>
<p>是否创建邮箱缓存，yes表示创建  </p>
</blockquote>
</li>
</ul>
<h1 id="六、-etc-login-defs文件"><a href="#六、-etc-login-defs文件" class="headerlink" title="六、/etc/login.defs文件"></a>六、/etc/login.defs文件</h1><p>该文件设置用户帐号限制的文件，比如密码的最大过期天数、密码的最大长度。但该文件的设置对root账户无效，且优先级低于/etc/shadow，如果/etc/shadow有相同的配置，则以/etc/shadow为准。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# cat /etc/login.defs </div><div class="line">#</div><div class="line"># Please note that the parameters in this configuration file control the</div><div class="line"># behavior of the tools from the shadow-utils component. None of these</div><div class="line"># tools uses the PAM mechanism, and the utilities that use PAM (such as the</div><div class="line"># passwd command) should therefore be configured elsewhere. Refer to</div><div class="line"># /etc/pam.d/system-auth for more information.</div><div class="line">#</div><div class="line"></div><div class="line"># *REQUIRED*</div><div class="line">#   Directory where mailboxes reside, _or_ name of file, relative to the</div><div class="line">#   home directory.  If you _do_ define both, MAIL_DIR takes precedence.</div><div class="line">#   QMAIL_DIR is for Qmail</div><div class="line">#</div><div class="line">#QMAIL_DIR	Maildir</div><div class="line">MAIL_DIR	/var/spool/mail</div><div class="line">#MAIL_FILE	.mail</div><div class="line"></div><div class="line"># Password aging controls:</div><div class="line">#</div><div class="line">#	PASS_MAX_DAYS	Maximum number of days a password may be used.</div><div class="line">#	PASS_MIN_DAYS	Minimum number of days allowed between password changes.</div><div class="line">#	PASS_MIN_LEN	Minimum acceptable password length.</div><div class="line">#	PASS_WARN_AGE	Number of days warning given before a password expires.</div><div class="line">#</div><div class="line">PASS_MAX_DAYS	99999</div><div class="line">PASS_MIN_DAYS	0</div><div class="line">PASS_MIN_LEN	5</div><div class="line">PASS_WARN_AGE	7</div><div class="line"></div><div class="line">#</div><div class="line"># Min/max values for automatic uid selection in useradd</div><div class="line">#</div><div class="line">UID_MIN			  500</div><div class="line">UID_MAX			60000</div><div class="line"></div><div class="line">#</div><div class="line"># Min/max values for automatic gid selection in groupadd</div><div class="line">#</div><div class="line">GID_MIN			  500</div><div class="line">GID_MAX			60000</div><div class="line"></div><div class="line">#</div><div class="line"># If defined, this command is run when removing a user.</div><div class="line"># It should remove any at/cron/print jobs etc. owned by</div><div class="line"># the user to be removed (passed as the first argument).</div><div class="line">#</div><div class="line">#USERDEL_CMD	/usr/sbin/userdel_local</div><div class="line"></div><div class="line">#</div><div class="line"># If useradd should create home directories for users by default</div><div class="line"># On RH systems, we do. This option is overridden with the -m flag on</div><div class="line"># useradd command line.</div><div class="line">#</div><div class="line">CREATE_HOME	yes</div><div class="line"></div><div class="line"># The permission mask is initialized to this value. If not specified, </div><div class="line"># the permission mask will be initialized to 022.</div><div class="line">UMASK           077</div><div class="line"></div><div class="line"># This enables userdel to remove user groups if no members exist.</div><div class="line">#</div><div class="line">USERGROUPS_ENAB yes</div><div class="line"></div><div class="line"># Use SHA512 to encrypt password.</div><div class="line">ENCRYPT_METHOD SHA512</div></pre></td></tr></table></figure></p>
<p>具体解释：</p>
<ul>
<li>MAIL_DIR    /var/spool/mail<blockquote>
<p>创建用户时，要在目录/var/spool/mail中创建一个用户mail文件</p>
</blockquote>
</li>
<li>PASS_MAX_DAYS    99999<blockquote>
<p>密码的最大有效期天数</p>
</blockquote>
</li>
<li>PASS_MIN_DAYS    0<blockquote>
<p>两次修改密码所需间隔的最小天数</p>
</blockquote>
</li>
<li>PASS_MIN_LEN    5<blockquote>
<p>密码的最小长度，对root无效</p>
</blockquote>
</li>
<li>PASS_WARN_AGE    7<blockquote>
<p>密码过期前多少天提示</p>
</blockquote>
</li>
<li>UID_MIN              500<blockquote>
<p>创建用户时，默认使用的最小UID</p>
</blockquote>
</li>
<li>GID_MAX            60000<blockquote>
<p>创建用户时，最大UID，即在创建用户时，不指定UID，则默认UID范围为500-60000</p>
</blockquote>
</li>
<li>USERDEL_CMD    /usr/sbin/userdel_local<blockquote>
<p>删除用户时，所需要执行的脚本</p>
</blockquote>
</li>
<li>CREATE_HOME    yes<blockquote>
<p>在使用useradd创建用户时，在不加 -M 及 -m 时，是否主动建立用户主目录</p>
</blockquote>
</li>
<li>UMASK           077<blockquote>
<p>表示创建新文件的默认权限，最高权限为777，当UMASK的值为077，则默认创建的文件为777-077=700，表示创建文件的默认权限为700</p>
</blockquote>
</li>
<li>USERGROUPS_ENAB yes<blockquote>
<p>如果用户组的成员为空，则在使用的userdel删除用户时，同时删除该用户所属组</p>
</blockquote>
</li>
<li>ENCRYPT_METHOD SHA512<blockquote>
<p>使用SHA512加密密码  </p>
</blockquote>
</li>
</ul>
<h1 id="七、-etc-skel文件夹"><a href="#七、-etc-skel文件夹" class="headerlink" title="七、/etc/skel文件夹"></a>七、/etc/skel文件夹</h1><p>当使用useradd命令创建用户时，会从此文件夹下复制全部文件至所创建用户的home目录下，比如可以放置一些系统的说明文件或者环境变量。  </p>
<h1 id="八、-etc-sudoers文件的使用方法"><a href="#八、-etc-sudoers文件的使用方法" class="headerlink" title="八、/etc/sudoers文件的使用方法"></a>八、/etc/sudoers文件的使用方法</h1><p>此文件可控制哪些账户可使用sudo权限执行某些命令,打开该文件可看见一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root	ALL=(ALL) 	ALL</div></pre></td></tr></table></figure></p>
<p>表示只有root用户能使用sudu来执行命令，如果想让一个test用户使用sudo来临时获取root权限，添加如下行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test	ALL=(ALL) 	ALL</div></pre></td></tr></table></figure></p>
<p>但是，test在使用sudo来获取root权限执行命令时，是需要输入密码的，如果不需要密码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test	ALL=(ALL) 	NOPASSW:ALL</div></pre></td></tr></table></figure></p>
<p>如果想限制test用户在使用sudo临时获取root权限时，只允许执行某些命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test	ALL=(ALL) 	NOPASSW:/bin/cat</div></pre></td></tr></table></figure></p>
<p>以上表示test用户在使用sudu临时获取root权限时，不需要输入密码，但只能使用cat命令来查看文件，如果不想让用户执行某些命令，其它命令都可以执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test	ALL=(ALL) 	NOPASSW:ALL,!/bin/cat</div></pre></td></tr></table></figure></p>
<p>以上表示test用户在使用sudo临时获取root权限时，不需要输入密码，且所有命令都可以执行，但不能使用cat命令来查看文件。<br>其他一些说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test    localhost.localdomain=(root)       NOPASSWD:/bin/ls</div></pre></td></tr></table></figure></p>
<p>具体解释：test用户可以在localhost.localdomain这台主机上无需密码使用sudo命令来获取root权限执行ls命令  </p>
<h1 id="九、useradd命令详解"><a href="#九、useradd命令详解" class="headerlink" title="九、useradd命令详解"></a>九、useradd命令详解</h1><ul>
<li><p>名称：useradd - 帐号建立或更新新使用者的资讯</p>
</li>
<li><p>语法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">useradd [-c comment] [-d home_dir]</div><div class="line">        [-e expire_date] [-f inactive_time]</div><div class="line">        [-g initial_group] [-G group[,...]]</div><div class="line">        [-m [-k skeleton_dir] | -M] [-s shell]</div><div class="line">        [-u uid [ -o]] [-n] [-r] login</div><div class="line"></div><div class="line">useradd -D [-g default_group] [-b default_home]</div><div class="line">        [-f default_inactive] [-e default_expire_date]</div><div class="line">        [-s default_shell]</div></pre></td></tr></table></figure>
</li>
<li><p>描述  </p>
<ul>
<li><p>新帐号建立<br> 当不加-D参数,useradd指令使用命令列来指定新帐号的设定值and使用系统上的预设值.新使用者帐号将产生一些系统档案，使用者目录建立，拷备起始档案等，这些均可以利用命令列选项指定。此版本为RedHat Linux提供，可帮每个新加入的使用者建立个<br>别的group,毋须添加-n选项。useradd可使用的选项为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-c comment</div></pre></td></tr></table></figure>
<blockquote>
<p>新帐号password档的说明栏。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-d home_dir</div></pre></td></tr></table></figure>
<blockquote>
<p>新帐号每次登入时所使用的home_dir。预设值为default_home内login名称，并当成登入时目录名称。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-e expire_date</div></pre></td></tr></table></figure>
<blockquote>
<p>帐号终止日期。日期的指定格式为MM/DD/YY。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-f inactive_days</div></pre></td></tr></table></figure>
<blockquote>
<p>帐号过期几日后永久停权。当值为0时帐号则立刻被停权。而当值为-1时则关闭此功能，预设值为-1.  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-g initial_group</div></pre></td></tr></table></figure>
<blockquote>
<p>group名称或以数字来做为使用者登入起始群组(group)。群组名须为现有存在的名称。群组数字也须为现有存在的群组。预设的群组数字为1。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-G group,[...]</div></pre></td></tr></table></figure>
<blockquote>
<p>定义此使用者为此一堆groups的成员。每个群组使用”,”区格开来，不可以夹杂空白字元。群组名同-g选项的限制。定义值为使用者的起始群组。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-m</div></pre></td></tr></table></figure>
<blockquote>
<p>使用者目录如不存在则自动建立。如使用-k选项skeleton_dir内的档案将复制至使用者目录下。然而在/etc/skel目录下的档案也会复制过去取代。任何在skeleton_dir or /etc/skel的目录也相同会在使用者目录下一 一建立。The -k同-m不建立目录以及不复制任何档案为预设值。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-M</div></pre></td></tr></table></figure>
<blockquote>
<p>不建立使用者目录，即使/etc/login.defs系统档设定要建立使用者目录。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-n</div></pre></td></tr></table></figure>
<blockquote>
<p>预设值使用者群组与使用者名称会相同。此选项将取消此预设值。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-r</div></pre></td></tr></table></figure>
<blockquote>
<p>此参数是用来建立系统帐号。系统帐号的UID会比定义在系统档上/etc/login.defs.的UID_MIN来的小。注意useradd此用法所建立<br>的帐号不会建立使用者目录，也不会在乎纪录在/etc/login.defs.的定义值。如果你想要有使用者目录须额外指定-m参数来建立<br>系统帐号。这是REDHAT额外增设的选项。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-s shell</div></pre></td></tr></table></figure>
<blockquote>
<p>使用者登入后使用的shell名称。预设为不填写，这样系统会帮你指定预设的登入shell。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-u uid</div></pre></td></tr></table></figure>
<blockquote>
<p>使用者的ID值。必须为唯一的ID值，除非用-o选项。数字不可为负值。预设为最小不得小于999而逐次增加。0~999传统上是保留给系统帐号使用。</p>
</blockquote>
</li>
<li><p>改变预设值<br>当-D选项出现时，useradd秀出现在的预设值，或是藉由命令列的方式更新预设值。可用选项为∶  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-b default_home</div></pre></td></tr></table></figure>
<blockquote>
<p>定义使用者所属目录的前一个目录。使用者名称会附加在default_home后面用来建立新使用者的目录。当然使用-d后则此选项无效。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-e default_expire_date</div></pre></td></tr></table></figure>
<blockquote>
<p>使用者帐号停止日期。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-f default_inactive</div></pre></td></tr></table></figure>
<blockquote>
<p>帐号过期几日后停权。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-g default_group</div></pre></td></tr></table></figure>
<blockquote>
<p>新帐号起始群组名或ID。群组名须为现有存在的名称。群组ID也须为现有存在的群组。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-s default_shell</div></pre></td></tr></table></figure>
<blockquote>
<p>使用者登入后使用的shell名称。往后新加入的帐号都将使用此shell。如不指定任何参数，useradd显示目前预设的值。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h1 id="十、passwd命令详解"><a href="#十、passwd命令详解" class="headerlink" title="十、passwd命令详解"></a>十、passwd命令详解</h1><ul>
<li>名称：passwd - 更新用户的身份验证令牌  </li>
<li><p>语法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">passwd [-k] [-l] [-u [-f]] [-d] [-e] [-n mindays] [-x maxdays]  </div><div class="line">      [-w warndays] [-i inactivedays] [-S] [--stdin] [username]</div></pre></td></tr></table></figure>
</li>
<li><p>参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-k</div></pre></td></tr></table></figure>
<blockquote>
<p>使即将过期的密码仍保持使用。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-l</div></pre></td></tr></table></figure>
<blockquote>
<p>锁住用户无权更改其密码，仅能通过root权限操作。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-u</div></pre></td></tr></table></figure>
<blockquote>
<p>使用-l参数后，再使用此参数解锁，仅能通过root权限操作。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-d</div></pre></td></tr></table></figure>
<blockquote>
<p>删除用户密码，仅能通过root权限操作。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-e</div></pre></td></tr></table></figure>
<blockquote>
<p>指定密码到期时间，用户在下次登录的时候强制更改密码。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-n</div></pre></td></tr></table></figure>
<blockquote>
<p>使用户在多少天内必须更改密码。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-x</div></pre></td></tr></table></figure>
<blockquote>
<p>指定用户密码最长使用期限。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-w</div></pre></td></tr></table></figure>
<blockquote>
<p>密码更改警告天数，告诉用户，N天后，密码将过期。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-i</div></pre></td></tr></table></figure>
<blockquote>
<p>当用户密码过期后，用户再经过 ‘n‘ 天后没有更改其密码，用户将不能登录  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-S</div></pre></td></tr></table></figure>
<blockquote>
<p>显示指定使用者的密码认证种类, 只有具备 root 权限的使用者方可使用。  </p>
</blockquote>
</li>
</ul>
<h1 id="十一、groupadd命令详解"><a href="#十一、groupadd命令详解" class="headerlink" title="十一、groupadd命令详解"></a>十一、groupadd命令详解</h1><ul>
<li>名称：groupadd - 创建一个用户组  </li>
<li>语法：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">groupadd [options] group</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>参数  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-f</div></pre></td></tr></table></figure>
<blockquote>
<p>使用此参数时, 即使指定的组已经存在, 命令依然会正常退出(不返回错误), 当和-g一起使用时, 如果指定的GID已经存在, 则会自动使用另一个GID。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-g</div></pre></td></tr></table></figure>
<blockquote>
<p>在创建组时，指定GID号。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-h</div></pre></td></tr></table></figure>
<blockquote>
<p>限制帮助消息并退出。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-K</div></pre></td></tr></table></figure>
<blockquote>
<p>覆盖/etc/login.defs文件中的默认值，可使用多个-K选项。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-o</div></pre></td></tr></table></figure>
<blockquote>
<p>新建用户组时，指定一个已经存在的GID。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-p</div></pre></td></tr></table></figure>
<blockquote>
<p>新建用户组时，为此用户组设置密码。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-r</div></pre></td></tr></table></figure>
<blockquote>
<p>建立系统用户组，GID低于499。</p>
</blockquote>
<h1 id="十二、账户管理的其他相关命令"><a href="#十二、账户管理的其他相关命令" class="headerlink" title="十二、账户管理的其他相关命令"></a>十二、账户管理的其他相关命令</h1><ul>
<li>userdel——删除帐号，加上-r参数，将连同该帐号的home下的文件一同删除。</li>
<li>groupdel——删除用户组</li>
<li>groupmod——修改组的相关信息<blockquote>
<p>用法：groupmod [-g gid [-o]] [-n group_name] group<br>-g gid 表示指定组的gid，如果使用-o参数，可重复使用gid值<br>-n group_name 表示更改的组名</p>
</blockquote>
</li>
<li>usermod——修改账户相关信息</li>
<li>chash——用于修改用户登录的shell</li>
</ul>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
            <category> Linux账户管理 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux服务启动配置文件的作用和流程]]></title>
      <url>http://www.nice-jj.com/2017/02/28/Linux%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%9C%E7%94%A8%E5%92%8C%E6%B5%81%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="一、centos6-5最小化安装后自带的服务"><a href="#一、centos6-5最小化安装后自带的服务" class="headerlink" title="一、centos6.5最小化安装后自带的服务"></a>一、centos6.5最小化安装后自带的服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">[root@localhost init.d]# ll</div><div class="line">总用量 128</div><div class="line">-rwxr-xr-x. 1 root root  3378 6月  22 2012 auditd</div><div class="line">-rwxr-xr-x. 1 root root  2793 7月  19 2011 crond</div><div class="line">-rw-r--r--. 1 root root 18216 1月   9 2013 functions</div><div class="line">-rwxr-xr-x. 1 root root  5829 1月   9 2013 halt</div><div class="line">-rwxr-xr-x. 1 root root  9515 2月  22 2013 ip6tables</div><div class="line">-rwxr-xr-x. 1 root root  9409 2月  22 2013 iptables</div><div class="line">-rwxr-xr-x. 1 root root   652 1月   9 2013 killall</div><div class="line">-rwxr-xr-x. 1 root root  2200 9月  14 2012 messagebus</div><div class="line">-rwxr-xr-x. 1 root root  2989 1月   9 2013 netconsole</div><div class="line">-rwxr-xr-x. 1 root root  5486 1月   9 2013 netfs</div><div class="line">-rwxr-xr-x. 1 root root  6334 1月   9 2013 network</div><div class="line">-rwxr-xr-x. 1 root root  3852 12月  3 2011 postfix</div><div class="line">-rwxr-xr-x. 1 root root  1559 5月  20 2009 rdisc</div><div class="line">-rwxr-xr-x. 1 root root  1822 2月  22 2013 restorecond</div><div class="line">-rwxr-xr-x. 1 root root  2011 1月  10 2013 rsyslog</div><div class="line">-rwxr-xr-x. 1 root root  1698 2月  22 2013 sandbox</div><div class="line">-rwxr-xr-x. 1 root root  2056 11月 20 2012 saslauthd</div><div class="line">-rwxr-xr-x. 1 root root   647 1月   9 2013 single</div><div class="line">-rwxr-xr-x. 1 root root  4534 2月  22 2013 sshd</div><div class="line">-rwxr-xr-x. 1 root root  2294 2月  22 2013 udev-post</div><div class="line">[root@localhost init.d]# chkconfig --list</div><div class="line">auditd         	0:关闭	1:关闭	2:启用	3:启用	4:启用	5:启用	6:关闭</div><div class="line">crond          	0:关闭	1:关闭	2:启用	3:启用	4:启用	5:启用	6:关闭</div><div class="line">ip6tables      	0:关闭	1:关闭	2:启用	3:启用	4:启用	5:启用	6:关闭</div><div class="line">iptables       	0:关闭	1:关闭	2:启用	3:启用	4:启用	5:启用	6:关闭</div><div class="line">messagebus     	0:关闭	1:关闭	2:启用	3:启用	4:启用	5:启用	6:关闭</div><div class="line">netconsole     	0:关闭	1:关闭	2:关闭	3:关闭	4:关闭	5:关闭	6:关闭</div><div class="line">netfs          	0:关闭	1:关闭	2:关闭	3:启用	4:启用	5:启用	6:关闭</div><div class="line">network        	0:关闭	1:关闭	2:启用	3:启用	4:启用	5:启用	6:关闭</div><div class="line">postfix        	0:关闭	1:关闭	2:启用	3:启用	4:启用	5:启用	6:关闭</div><div class="line">rdisc          	0:关闭	1:关闭	2:关闭	3:关闭	4:关闭	5:关闭	6:关闭</div><div class="line">restorecond    	0:关闭	1:关闭	2:关闭	3:关闭	4:关闭	5:关闭	6:关闭</div><div class="line">rsyslog        	0:关闭	1:关闭	2:启用	3:启用	4:启用	5:启用	6:关闭</div><div class="line">saslauthd      	0:关闭	1:关闭	2:关闭	3:关闭	4:关闭	5:关闭	6:关闭</div><div class="line">sshd           	0:关闭	1:关闭	2:启用	3:启用	4:启用	5:启用	6:关闭</div><div class="line">udev-post      	0:关闭	1:启用	2:启用	3:启用	4:启用	5:启用	6:关闭</div></pre></td></tr></table></figure>
<h1 id="二、service命令"><a href="#二、service命令" class="headerlink" title="二、service命令"></a>二、service命令</h1><p>service 命令用于对系统服务进行管理，比如启动（start）、停止（stop）、重启（restart）、重新加载配置（reload）、查看状态（status）等。<br>例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">service sshd #显示sshd命令行的用法</div><div class="line">service sshd start #启动sshd</div><div class="line">service sshd stop #停止sshd</div><div class="line">service sshd restart #停止sshd</div><div class="line">service sshd reload #重新加载sshd的配置文件</div><div class="line">service sshd status #查看sshd状态</div></pre></td></tr></table></figure></p>
<p>如果使用yum或apt-get安装应用，安装好之后会自动在/etc/init.d目录下创建一个shell脚本来管理相应的服务。<br>这样就可以使用/etc/init.d/sshd start或service sshd start来启动sshd服务，其他服务类似。<br>如果是自己编译安装的应用，需要将源码包里的管理脚本加入到/etc/init.d中才可使用以上方法来管理此服务，如果源码包里没有管理脚本，则需要自己写一个进程管理脚本来管理此服务。  </p>
<h1 id="三、chkconfig命令"><a href="#三、chkconfig命令" class="headerlink" title="三、chkconfig命令"></a>三、chkconfig命令</h1><p>提供了一个维护/etc/rc[0~6] d 文件夹的命令行工具，它减轻了系统直接管理这些文件夹中的符号连接的负担。chkconfig主要包括5个原始功能：为系统管理增加新的服务、为系统管理移除服务、列出单签服务的启动信息、改变服务的启动信息和检查特殊服务的启动状态。<br>必要参数<br>    –add 开启指定的服务程序<br>    –del 关闭指定的服务程序<br>    –list 列出chkconfig所知道的所有服务  </p>
<p>选择参数<br>    –help 显示帮助信息<br>    –version 显示版本信息<br>    –level&lt;代号&gt; 设置服务程序的等级代号，它是一串0~7的数字，如“-level35”代表指定运行等级3和5  </p>
<blockquote>
<p>等级0表示：表示关机<br>等级1表示：单用户模式<br>等级2表示：无网络连接的多用户命令行模式<br>等级3表示：有网络连接的多用户命令行模式<br>等级4表示：不可用<br>等级5表示：带图形界面的多用户模式<br>等级6表示：重新启动  </p>
</blockquote>
<p>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">chkconfig --list #列出所有的系统服务</div><div class="line">chkconfig --add httpd #增加httpd服务</div><div class="line">chkconfig --del httpd #删除httpd服务</div><div class="line">chkconfig --level httpd 2345 on #在运行级别2、3、4、5的情况下都是on（开启）的状态</div><div class="line">chkconfig httpd on #将httpd加入开机启动</div><div class="line">chkconfig httpd off #关闭httpd开机启动</div></pre></td></tr></table></figure></p>
<p>当使用chkconfig加入开机启动但没有加–level参数指定运行级别，则会根据使用默认级别2、3、4、5。<br>或根据管理脚本的注释来定义运行级别，以sshd为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">#</div><div class="line"># sshd          Start up the OpenSSH server daemon</div><div class="line">#</div><div class="line"># chkconfig: 2345 55 25</div><div class="line"># description: SSH is a protocol for secure remote shell access. \</div><div class="line">#              This service starts up the OpenSSH server daemon.</div><div class="line">#</div><div class="line"># processname: sshd</div><div class="line"># config: /etc/ssh/ssh_host_key</div><div class="line"># config: /etc/ssh/ssh_host_key.pub</div><div class="line"># config: /etc/ssh/ssh_random_seed</div><div class="line"># config: /etc/ssh/sshd_config</div><div class="line"># pidfile: /var/run/sshd.pid</div><div class="line"></div><div class="line">### BEGIN INIT INFO</div><div class="line"># Provides: sshd</div><div class="line"># Required-Start: $local_fs $network $syslog</div><div class="line"># Required-Stop: $local_fs $syslog</div><div class="line"># Should-Start: $syslog</div><div class="line"># Should-Stop: $network $syslog</div><div class="line"># Default-Start: 2 3 4 5</div><div class="line"># Default-Stop: 0 1 6</div><div class="line"># Short-Description: Start up the OpenSSH server daemon</div><div class="line"># Description:       SSH is a protocol for secure remote shell access.</div><div class="line">#                    This service starts up the OpenSSH server daemon.</div><div class="line">### END INIT INFO</div></pre></td></tr></table></figure></p>
<ul>
<li>chkconfig: 2345 55 25<blockquote>
<p>在使用chkconfig加入开机启动项时没有使用level参数，则会根据这一行来定义启动级别和启动顺序，其中2345表示<br>sshd在启动级别为2345的时候启动，55表示sshd开机时的启动优先级，25表示sshd关机时的关闭优先级。</p>
</blockquote>
</li>
<li>processname: sshd<blockquote>
<p>进程名称</p>
</blockquote>
</li>
<li>config: /etc/ssh/*<blockquote>
<p>sshd服务的相关配置文件。</p>
</blockquote>
</li>
<li>pidfile: /var/run/sshd.pid<blockquote>
<p>sshd启动后的PID。</p>
</blockquote>
</li>
<li>### BEGIN INIT INFO 和 ### END INIT INFO里面的内容  <blockquote>
<p>Default-Start: 2 3 4 5（表示该服务在开机时运行级别为2 3 4 5时启动，与chkconfig是“与”的关系）<br>Default-Stop: 0 1 6（表示该服务在开机时运行级别为0 1 6时不启动，2 3 4 5启动，优先级高于Default-Start）<br>详细介绍：<a href="https://wiki.debian.org/LSBInitScripts" target="_blank" rel="external">https://wiki.debian.org/LSBInitScripts</a>  </p>
</blockquote>
</li>
</ul>
<h1 id="四、-var-lock-subsys"><a href="#四、-var-lock-subsys" class="headerlink" title="四、/var/lock/subsys/"></a>四、/var/lock/subsys/</h1><p>程序需要判断是否当前已经有一个实例在运行，这个目录就是让程序判断是否有实例运行的标识，保持服务的唯一性。  </p>
<h1 id="五、-var-run"><a href="#五、-var-run" class="headerlink" title="五、/var/run/"></a>五、/var/run/</h1><p>/var/run 目录中存放的是自系统启动以来描述系统信息的文件。比较常见的用途是daemon进程将自己的pid保存到这个目录。标准要求这个文件夹中的文件必须是在系统启动的时候清空，以便建立新的文件。<br>pid文件的作用：防止进程启动多个副本，保持进程的唯一性。<br>utmp文件：就是用来记录机器的启动时间以及当前登陆用户的,可用who或w命令显示当中的内容。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
            <category> Linux服务启动配置文件的作用和流程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows路由表设置]]></title>
      <url>http://www.nice-jj.com/2017/02/23/Windows%E8%B7%AF%E7%94%B1%E8%A1%A8%E8%AE%BE%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>因工作需要，在访问公司内部资源的时候必须要拨VPN才能连上公司总部的资源，如果拨了之后有可能会影响外网资源的访问速度。其实最重要的是，<br>拨了VPN，谁知道公司会不会对我的流量进行审计，最后“资源”都可能泄漏，所以就花了两个小时研究了一下怎么在拨了VPN之后，<br>只有在访问公司内部资源的时候才通过VPN访问，访问91p这些站点不走VPN。</p>
<h2 id="一、第一种方法是更改windows的路由表"><a href="#一、第一种方法是更改windows的路由表" class="headerlink" title="一、第一种方法是更改windows的路由表"></a>一、第一种方法是更改windows的路由表</h2><h3 id="1-查看没有拨VPN时候的路由表，并记录下来，命令是route-print，可以看到相应的路由表和网卡对应的接口列表（不懂路由的自己google相关资料）"><a href="#1-查看没有拨VPN时候的路由表，并记录下来，命令是route-print，可以看到相应的路由表和网卡对应的接口列表（不懂路由的自己google相关资料）" class="headerlink" title="1. 查看没有拨VPN时候的路由表，并记录下来，命令是route print，可以看到相应的路由表和网卡对应的接口列表（不懂路由的自己google相关资料）"></a>1. 查看没有拨VPN时候的路由表，并记录下来，命令是route print，可以看到相应的路由表和网卡对应的接口列表（不懂路由的自己google相关资料）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">IPv4 路由表</div><div class="line">===========================================================================</div><div class="line">活动路由:</div><div class="line">网络目标                   网络掩码          网关               接口      跃点数</div><div class="line">          0.0.0.0          0.0.0.0      192.168.0.1    192.168.0.105     20</div><div class="line">        127.0.0.0        255.0.0.0            在链路上         127.0.0.1    306</div><div class="line">        127.0.0.1  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">  127.255.255.255  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">      169.254.0.0      255.255.0.0            在链路上   169.254.162.228    276</div><div class="line">      169.254.0.0      255.255.0.0            在链路上     169.254.85.24    276</div><div class="line">    169.254.85.24  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">  169.254.162.228  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">  169.254.255.255  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">  169.254.255.255  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">      192.168.0.0    255.255.255.0            在链路上     192.168.0.105    276</div><div class="line">    192.168.0.105  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">    192.168.0.255  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">        224.0.0.0        240.0.0.0            在链路上         127.0.0.1    306</div><div class="line">        224.0.0.0        240.0.0.0            在链路上     192.168.0.105    276</div><div class="line">        224.0.0.0        240.0.0.0            在链路上     169.254.85.24    276</div><div class="line">        224.0.0.0        240.0.0.0            在链路上   169.254.162.228    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">  255.255.255.255  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">===========================================================================</div></pre></td></tr></table></figure>
<blockquote>
<p>关键看第一行，网络目标为0.0.0.0，掩码为0.0.0.0，网关为192.168.0.1，接口为192.168.0.105。<br>打个比方：从你的电脑访问百度的时候就好比从深圳到广州，网络目标是广州，网络掩码是广东省，网关是收费站，接口是深圳</p>
</blockquote>
<h3 id="2-拨了VPN之后的路由表，并记录下来"><a href="#2-拨了VPN之后的路由表，并记录下来" class="headerlink" title="2. 拨了VPN之后的路由表，并记录下来"></a>2. 拨了VPN之后的路由表，并记录下来</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">IPv4 路由表</div><div class="line">===========================================================================</div><div class="line">活动路由:</div><div class="line">网络目标                  网络掩码          网关           接口          跃点数</div><div class="line">          0.0.0.0          0.0.0.0      192.168.0.1    192.168.0.105     20</div><div class="line">          0.0.0.0          0.0.0.0       10.10.0.17       10.10.0.18     30</div><div class="line">          0.0.0.0        128.0.0.0       10.10.0.17       10.10.0.18     30</div><div class="line">        手动打码        255.255.0.0       10.10.0.17       10.10.0.18     30</div><div class="line">       10.10.0.16  255.255.255.252            在链路上        10.10.0.18    286</div><div class="line">       10.10.0.18  255.255.255.255            在链路上        10.10.0.18    286</div><div class="line">       10.10.0.19  255.255.255.255            在链路上        10.10.0.18    286</div><div class="line">        手动打码          255.0.0.0            在链路上         127.0.0.1    306</div><div class="line">        127.0.0.1  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">  127.255.255.255  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">        手动打码          128.0.0.0       10.10.0.17       10.10.0.18     30</div><div class="line">      169.254.0.0      255.255.0.0            在链路上   169.254.162.228    276</div><div class="line">      169.254.0.0      255.255.0.0            在链路上     169.254.85.24    276</div><div class="line">    169.254.85.24  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">  169.254.162.228  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">  169.254.255.255  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">  169.254.255.255  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">      192.168.0.0    255.255.255.0            在链路上     192.168.0.105    276</div><div class="line">    192.168.0.105  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">    192.168.0.255  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">      手动打码        255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">    手动打码          255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">    手动打码          255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">    手动打码          255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">  手动打码          255.255.255.255      192.168.0.1    192.168.0.105     20</div><div class="line">        224.0.0.0        240.0.0.0            在链路上         127.0.0.1    306</div><div class="line">        224.0.0.0        240.0.0.0            在链路上     192.168.0.105    276</div><div class="line">        224.0.0.0        240.0.0.0            在链路上        10.10.0.18    286</div><div class="line">        224.0.0.0        240.0.0.0            在链路上     169.254.85.24    276</div><div class="line">        224.0.0.0        240.0.0.0            在链路上   169.254.162.228    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">  255.255.255.255  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上        10.10.0.18    286</div><div class="line">  255.255.255.255  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">===========================================================================</div></pre></td></tr></table></figure>
<blockquote>
<p>主要看前三行的路由信息，可以看到拨了VPN后通过10.10.0.17这个网关出去了，接下来就要删除这些路由信息</p>
</blockquote>
<h3 id="3-删除网络目标为0-0-0-0的路由规则，其余不需要删除，再查看路由信息"><a href="#3-删除网络目标为0-0-0-0的路由规则，其余不需要删除，再查看路由信息" class="headerlink" title="3. 删除网络目标为0.0.0.0的路由规则，其余不需要删除，再查看路由信息"></a>3. 删除网络目标为0.0.0.0的路由规则，其余不需要删除，再查看路由信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;route delete 0.0.0.0</div><div class="line"> 操作完成!</div><div class="line"></div><div class="line">C:\Users\Administrator&gt;route print</div><div class="line">IPv4 路由表</div><div class="line">===========================================================================</div><div class="line">活动路由:</div><div class="line">网络目标                   网络掩码          网关               接口      跃点数</div><div class="line">        手动打码        255.255.0.0       10.10.0.17       10.10.0.18     30</div><div class="line">       10.10.0.16  255.255.255.252            在链路上        10.10.0.18    286</div><div class="line">       10.10.0.18  255.255.255.255            在链路上        10.10.0.18    286</div><div class="line">       10.10.0.19  255.255.255.255            在链路上        10.10.0.18    286</div><div class="line">        手动打码          255.0.0.0            在链路上         127.0.0.1    306</div><div class="line">        127.0.0.1  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">  127.255.255.255  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">        手动打码          128.0.0.0       10.10.0.17       10.10.0.18     30</div><div class="line">      169.254.0.0      255.255.0.0            在链路上   169.254.162.228    276</div><div class="line">      169.254.0.0      255.255.0.0            在链路上     169.254.85.24    276</div><div class="line">    169.254.85.24  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">  169.254.162.228  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">  169.254.255.255  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">  169.254.255.255  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">      192.168.0.0    255.255.255.0            在链路上     192.168.0.105    276</div><div class="line">    192.168.0.105  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">    192.168.0.255  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">      手动打码        255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">    手动打码          255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">    手动打码          255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">    手动打码          255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">  手动打码          255.255.255.255      192.168.0.1    192.168.0.105     20</div><div class="line">        224.0.0.0        240.0.0.0            在链路上         127.0.0.1    306</div><div class="line">        224.0.0.0        240.0.0.0            在链路上     192.168.0.105    276</div><div class="line">        224.0.0.0        240.0.0.0            在链路上        10.10.0.18    286</div><div class="line">        224.0.0.0        240.0.0.0            在链路上     169.254.85.24    276</div><div class="line">        224.0.0.0        240.0.0.0            在链路上   169.254.162.228    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">  255.255.255.255  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上        10.10.0.18    286</div><div class="line">  255.255.255.255  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">===========================================================================</div></pre></td></tr></table></figure>
<h3 id="4-添加路由，表示访问任何信息都通过192-168-0-1网关"><a href="#4-添加路由，表示访问任何信息都通过192-168-0-1网关" class="headerlink" title="4. 添加路由，表示访问任何信息都通过192.168.0.1网关"></a>4. 添加路由，表示访问任何信息都通过192.168.0.1网关</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;route add 0.0.0.0 mask 0.0.0.0 192.168.0.1</div><div class="line"> 操作完成!</div></pre></td></tr></table></figure>
<h3 id="5-再查看路由表-可以看到访问所有地址（0-0-0-0）都通过192-168-0-1网关，访问公司内网资源都通过10-10-0-17网关，如果还有访问不到的，按照上面的命令添加即可"><a href="#5-再查看路由表-可以看到访问所有地址（0-0-0-0）都通过192-168-0-1网关，访问公司内网资源都通过10-10-0-17网关，如果还有访问不到的，按照上面的命令添加即可" class="headerlink" title="5. 再查看路由表,可以看到访问所有地址（0.0.0.0）都通过192.168.0.1网关，访问公司内网资源都通过10.10.0.17网关，如果还有访问不到的，按照上面的命令添加即可"></a>5. 再查看路由表,可以看到访问所有地址（0.0.0.0）都通过192.168.0.1网关，访问公司内网资源都通过10.10.0.17网关，如果还有访问不到的，按照上面的命令添加即可</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">IPv4 路由表</div><div class="line">===========================================================================</div><div class="line">活动路由:</div><div class="line">网络目标        网络掩码          网关       接口   跃点数</div><div class="line">          0.0.0.0          0.0.0.0      192.168.0.1    192.168.0.105     21</div><div class="line">        手动打码        255.255.0.0       10.10.0.17       10.10.0.18     30</div><div class="line">       10.10.0.16  255.255.255.252            在链路上        10.10.0.18    286</div><div class="line">       10.10.0.18  255.255.255.255            在链路上        10.10.0.18    286</div><div class="line">       10.10.0.19  255.255.255.255            在链路上        10.10.0.18    286</div><div class="line">        手动打码          255.0.0.0            在链路上         127.0.0.1    306</div><div class="line">        127.0.0.1  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">  127.255.255.255  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">        手动打码          128.0.0.0       10.10.0.17       10.10.0.18     30</div><div class="line">      169.254.0.0      255.255.0.0            在链路上   169.254.162.228    276</div><div class="line">      169.254.0.0      255.255.0.0            在链路上     169.254.85.24    276</div><div class="line">    169.254.85.24  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">  169.254.162.228  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">  169.254.255.255  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">  169.254.255.255  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">      192.168.0.0    255.255.255.0            在链路上     192.168.0.105    276</div><div class="line">    192.168.0.105  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">    192.168.0.255  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">      手动打码        255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">    手动打码          255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">    手动打码          255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">    手动打码          255.255.255.0       10.10.0.17       10.10.0.18     30</div><div class="line">  手动打码          255.255.255.255      192.168.0.1    192.168.0.105     20</div><div class="line">        224.0.0.0        240.0.0.0            在链路上         127.0.0.1    306</div><div class="line">        224.0.0.0        240.0.0.0            在链路上     192.168.0.105    276</div><div class="line">        224.0.0.0        240.0.0.0            在链路上        10.10.0.18    286</div><div class="line">        224.0.0.0        240.0.0.0            在链路上     169.254.85.24    276</div><div class="line">        224.0.0.0        240.0.0.0            在链路上   169.254.162.228    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上         127.0.0.1    306</div><div class="line">  255.255.255.255  255.255.255.255            在链路上     192.168.0.105    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上        10.10.0.18    286</div><div class="line">  255.255.255.255  255.255.255.255            在链路上     169.254.85.24    276</div><div class="line">  255.255.255.255  255.255.255.255            在链路上   169.254.162.228    276</div><div class="line">===========================================================================</div></pre></td></tr></table></figure>
<h3 id="6-路由跟踪测试，可以看到访问内部资源通过VPN访问，访问外部资源不通过VPN访问，并且公网IP也显示的是其所在地的IP"><a href="#6-路由跟踪测试，可以看到访问内部资源通过VPN访问，访问外部资源不通过VPN访问，并且公网IP也显示的是其所在地的IP" class="headerlink" title="6. 路由跟踪测试，可以看到访问内部资源通过VPN访问，访问外部资源不通过VPN访问，并且公网IP也显示的是其所在地的IP"></a>6. 路由跟踪测试，可以看到访问内部资源通过VPN访问，访问外部资源不通过VPN访问，并且公网IP也显示的是其所在地的IP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;tracert 192.168.x.x</div><div class="line"></div><div class="line">通过最多 30 个跃点跟踪</div><div class="line">到 wiki.xxx.cn [192.168.x.x] 的路由:</div><div class="line"></div><div class="line">  1    37 ms    37 ms    37 ms  10.10.x.x</div><div class="line">  2    37 ms    37 ms    37 ms  wiki.xxx.cn [192.168.x.x]</div><div class="line"></div><div class="line">跟踪完成。</div><div class="line"></div><div class="line">C:\Users\Administrator&gt;tracert www.baidu.com</div><div class="line"></div><div class="line">通过最多 30 个跃点跟踪</div><div class="line">到 www.a.shifen.com [119.75.217.109] 的路由:</div><div class="line"></div><div class="line">  1    &lt;1 毫秒   &lt;1 毫秒   &lt;1 毫秒 192.168.0.1</div><div class="line">  2     3 ms     2 ms     2 ms  192.168.13.254</div><div class="line">  3     1 ms     1 ms     1 ms  192.168.5.1</div><div class="line">  4     *        *        *     请求超时。</div><div class="line">  5     1 ms     1 ms     1 ms  10.193.181.11</div><div class="line">  6     3 ms     4 ms     2 ms  113.105.70.222</div><div class="line">  7     2 ms     2 ms     2 ms  121.15.179.129</div><div class="line">  8     2 ms     2 ms     2 ms  121.15.179.82</div><div class="line">  9     *        *        2 ms  183.56.65.30</div><div class="line"> 10    38 ms    39 ms    39 ms  202.97.65.101</div><div class="line"> 11     *        *        *     请求超时。</div><div class="line"> 12    37 ms    37 ms    37 ms  220.181.17.50</div><div class="line"> 13     *        *        *     请求超时。</div><div class="line"> 14     *        *        *     请求超时。</div><div class="line"> 15    35 ms    35 ms    35 ms  119.75.217.109</div><div class="line"></div><div class="line">跟踪完成。</div></pre></td></tr></table></figure>
<h3 id="7-总结就两条命令"><a href="#7-总结就两条命令" class="headerlink" title="7. 总结就两条命令"></a>7. 总结就两条命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">route delete 0.0.0.0</div><div class="line">route add 0.0.0.0 mask 0.0.0.0 192.168.0.1</div></pre></td></tr></table></figure>
<h2 id="二、还有一种方法，暂未实践，理论上可行"><a href="#二、还有一种方法，暂未实践，理论上可行" class="headerlink" title="二、还有一种方法，暂未实践，理论上可行"></a>二、还有一种方法，暂未实践，理论上可行</h2><p>准备两个路由器，其中一个要可以拨VPN的，利用笔记本（我们都用笔记本）的双网卡机制，无线网卡连VPN的路由器，有线网卡连另外一个路由器，然后在通过设置windows的路由表就可以实现所需功能，并且省略拨VPN的麻烦</p>
<blockquote>
<p>如有错误，欢迎来搞</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 计算机网络 </category>
            
            <category> Windows路由表设置 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux启动顺序]]></title>
      <url>http://www.nice-jj.com/2017/02/19/Linux%E5%90%AF%E5%8A%A8%E9%A1%BA%E5%BA%8F/</url>
      <content type="html"><![CDATA[<h2 id="一、系统启动初始化init阶段"><a href="#一、系统启动初始化init阶段" class="headerlink" title="一、系统启动初始化init阶段"></a>一、系统启动初始化init阶段</h2><h3 id="1-Grub加载内核之后，第一个运行的程序是-sbin-init"><a href="#1-Grub加载内核之后，第一个运行的程序是-sbin-init" class="headerlink" title="1. Grub加载内核之后，第一个运行的程序是 /sbin/init"></a>1. Grub加载内核之后，第一个运行的程序是 /sbin/init</h3><p>init是SysVinit的一个实体进程，是系统所有进程的顶级父进程，PID是1  </p>
<h3 id="2-sbin-init-读取-etc-inittab文件，确定运行级别"><a href="#2-sbin-init-读取-etc-inittab文件，确定运行级别" class="headerlink" title="2. /sbin/init 读取 /etc/inittab文件，确定运行级别"></a>2. /sbin/init 读取 /etc/inittab文件，确定运行级别</h3><p>etc/inittab文件的信息会包含以下信息给init程序  </p>
<ul>
<li>捕获组合键的定义  </li>
<li>定义电源 fail/restore 脚本  </li>
<li>启动 getty 和虚拟控制台  </li>
<li>系统需要进入的 runlevel  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@centos ~]# cat /etc/inittab</div><div class="line"># inittab is only used by upstart for the default runlevel.</div><div class="line">#</div><div class="line"># ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</div><div class="line">#</div><div class="line"># System initialization is started by /etc/init/rcS.conf</div><div class="line">#</div><div class="line"># Individual runlevels are started by /etc/init/rc.conf</div><div class="line">#</div><div class="line"># Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf</div><div class="line">#</div><div class="line"># Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,</div><div class="line"># with configuration in /etc/sysconfig/init.</div><div class="line">#</div><div class="line"># For information on how to write upstart event handlers, or how</div><div class="line"># upstart works, see init(5), init(8), and initctl(8).</div><div class="line">#</div><div class="line"># Default runlevel. The runlevels used are:</div><div class="line">#   0 - halt (Do NOT set initdefault to this)</div><div class="line">#   1 - Single user mode</div><div class="line">#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</div><div class="line">#   3 - Full multiuser mode</div><div class="line">#   4 - unused</div><div class="line">#   5 - X11</div><div class="line">#   6 - reboot (Do NOT set initdefault to this)</div><div class="line">#</div><div class="line">id:3:initdefault:</div></pre></td></tr></table></figure>
<p>当前系统使用有网络支持的多用户模式，字符终端，没有图形界面<br>Linux的运行等级设定如下:  </p>
<blockquote>
<p>0：关机<br>1：单用户模式<br>2：无网络支持的多用户模式<br>3：有网络支持的多用户模式<br>4：保留，未使用<br>5：有网络支持有X-Window支持的多用户模式<br>6：重新引导系统，即重启  </p>
</blockquote>
<h3 id="3-sbin-init-执行-etc-rc-d-rc-sysinit脚本"><a href="#3-sbin-init-执行-etc-rc-d-rc-sysinit脚本" class="headerlink" title="3. /sbin/init 执行 /etc/rc.d/rc.sysinit脚本"></a>3. /sbin/init 执行 /etc/rc.d/rc.sysinit脚本</h3><p>sysinit的是系统启动的初始化脚本, 会做以下一些工作：  </p>
<ul>
<li>激活 udev 和 selinux  </li>
<li>设置定义在/etc/sysctl.conf 中的内核参数  </li>
<li>设置系统时钟  </li>
<li>加载 keymaps  </li>
<li>使用交换分区  </li>
<li>设置主机名(hostname)  </li>
<li>根分区检查和 remount  </li>
<li>激活 RAID 和 LVM 设备  </li>
<li>开启磁盘配额  </li>
<li>检查并挂载所有文件系统  </li>
<li>清除过期的 locks 和 PID 文件  </li>
</ul>
<h3 id="4-sbin-init-执行-etc-rc-d-rc脚本"><a href="#4-sbin-init-执行-etc-rc-d-rc脚本" class="headerlink" title="4. /sbin/init 执行 /etc/rc.d/rc脚本"></a>4. /sbin/init 执行 /etc/rc.d/rc脚本</h3><blockquote>
<p>/etc/rc脚本确定 /etc/inittab文件配置的运行级别ID(X)。</p>
</blockquote>
<p>每个 runlevel X 都有一个这样的目录，目录名为/etc/rc.d/rcX.d。在这些目录下存放着很多不同的脚本。<br>文件名以 S (start) 开头的脚本就是启动时应该运行的脚本，S 后面跟的数字定义了这些脚本的执行顺序<br>文件名以 K (kill) 开头的脚本表示启动的时候不执行的脚本。<br>在/etc/rc.d/rcX.d 目录下的脚本其实都是一些软链接文件，真实的脚本文件存放在/etc/init.d 目录下, 这个目录的文件通常被称为Linux服务启动脚本  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@centos rc3.d]# pwd</div><div class="line">/etc/rc3.d</div><div class="line">[root@centos rc3.d]# ls -al</div><div class="line">总用量 8</div><div class="line">drwxr-xr-x.  2 root root 4096 11月 29 13:12 .</div><div class="line">drwxr-xr-x. 10 root root 4096 1月  27 09:34 ..</div><div class="line">lrwxrwxrwx.  1 root root   19 11月 29 12:49 K10saslauthd -&gt; ../init.d/saslauthd</div><div class="line">lrwxrwxrwx.  1 root root   17 11月 16 2015 K30postfix -&gt; ../init.d/postfix</div><div class="line">lrwxrwxrwx.  1 root root   20 11月 16 2015 K50netconsole -&gt; ../init.d/netconsole</div><div class="line">lrwxrwxrwx.  1 root root   21 11月 16 2015 K87restorecond -&gt; ../init.d/restorecond</div><div class="line">lrwxrwxrwx.  1 root root   15 11月 16 2015 K89rdisc -&gt; ../init.d/rdisc</div><div class="line">lrwxrwxrwx.  1 root root   19 11月 16 2015 K92ip6tables -&gt; ../init.d/ip6tables</div><div class="line">lrwxrwxrwx.  1 root root   18 11月 29 12:34 K92iptables -&gt; ../init.d/iptables</div><div class="line">lrwxrwxrwx.  1 root root   22 11月 16 2015 S02lvm2-monitor -&gt; ../init.d/lvm2-monitor</div><div class="line">lrwxrwxrwx.  1 root root   17 11月 16 2015 S10network -&gt; ../init.d/network</div><div class="line">lrwxrwxrwx.  1 root root   16 11月 16 2015 S11auditd -&gt; ../init.d/auditd</div><div class="line">lrwxrwxrwx.  1 root root   17 11月 16 2015 S12rsyslog -&gt; ../init.d/rsyslog</div><div class="line">lrwxrwxrwx.  1 root root   26 11月 16 2015 S25blk-availability -&gt; ../init.d/blk-availability</div><div class="line">lrwxrwxrwx.  1 root root   15 11月 16 2015 S25netfs -&gt; ../init.d/netfs</div><div class="line">lrwxrwxrwx.  1 root root   19 11月 16 2015 S26udev-post -&gt; ../init.d/udev-post</div><div class="line">lrwxrwxrwx.  1 root root   14 11月 26 08:19 S55sshd -&gt; ../init.d/sshd</div><div class="line">lrwxrwxrwx.  1 root root   15 11月 16 2015 S90crond -&gt; ../init.d/crond</div><div class="line">lrwxrwxrwx.  1 root root   15 11月 29 13:12 S95jexec -&gt; ../init.d/jexec</div><div class="line">lrwxrwxrwx.  1 root root   11 11月 16 2015 S99local -&gt; ../rc.local</div></pre></td></tr></table></figure>
<blockquote>
<p>chkconfig 名字就是对/etc/init.d/目录下的服务脚本进行管理的工具，实际上就是对 /etc/rcX.d/下的软链接文件的增删改。  </p>
</blockquote>
<h3 id="5-sbin-init-执行-etc-rc-d-rc-local-脚本"><a href="#5-sbin-init-执行-etc-rc-d-rc-local-脚本" class="headerlink" title="5. /sbin/init 执行 /etc/rc.d/rc.local 脚本"></a>5. /sbin/init 执行 /etc/rc.d/rc.local 脚本</h3><p>rc.local 是 Linux 留给用户进行个性化设置的地方。比如放一些自定义的启动命令  </p>
<h3 id="6-启动登录终端-sbin-mingetty，等待登录"><a href="#6-启动登录终端-sbin-mingetty，等待登录" class="headerlink" title="6. 启动登录终端/sbin/mingetty，等待登录"></a>6. 启动登录终端/sbin/mingetty，等待登录</h3><p>mingetty 会启动 /bin/login进程，用来验证帐户密码，输入正确的账户密码之后,从/etc/passwd的账户配置里面启动响应的shell,例如下面root帐户使用了bash<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@centos ~]# cat /etc/passwd</div><div class="line">root:x:0:0:root:/root:/bin/bash</div><div class="line">bin:x:1:1:bin:/bin:/sbin/nologin</div><div class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</div><div class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</div><div class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</div><div class="line">sync:x:5:0:sync:/sbin:/bin/sync</div><div class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</div><div class="line">halt:x:7:0:halt:/sbin:/sbin/halt</div><div class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</div></pre></td></tr></table></figure></p>
<h2 id="二、用户登录阶段"><a href="#二、用户登录阶段" class="headerlink" title="二、用户登录阶段"></a>二、用户登录阶段</h2><h3 id="7-用户登录后先执行-etc-profile"><a href="#7-用户登录后先执行-etc-profile" class="headerlink" title="7. 用户登录后先执行 /etc/profile"></a>7. 用户登录后先执行 /etc/profile</h3><blockquote>
<p>这个文件是所有用户登录系统后的设置环境信息,当用户第一次登录时,该文件被执行. 并从/etc/profile.d目录的配置文件中搜集shell的设置<br>紧接着profile文件里面去启动 /etc/profile.d 下的所有文件  </p>
</blockquote>
<h3 id="8-执行-bash-profile"><a href="#8-执行-bash-profile" class="headerlink" title="8. 执行 ~/.bash_profile"></a>8. 执行 ~/.bash_profile</h3><blockquote>
<p>这个文件是用户专属的bash shell初始化脚本<br>当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量<br>~/.bash_profile会判断 ~/.bashrc文件是否存在并执行，~/.bashrc会判断/etc/bashrc文件是否存在并执行，最后设置PATH环境变量，结束。<br>所以~/.bashrc和/etc/bashrc都是层层嵌套执行的。  </p>
</blockquote>
<h3 id="9-执行-bashrc"><a href="#9-执行-bashrc" class="headerlink" title="9. 执行 ~/.bashrc"></a>9. 执行 ~/.bashrc</h3><blockquote>
<p>这个文件是用户专属的bash shell初始化脚本<br>当登录时以及每次打开新的shell时,该文件被执行<br>~/.bashrc 会判断 /etc/bashrc文件是否存在并执行  </p>
</blockquote>
<h3 id="10-执行-etc-bashrc"><a href="#10-执行-etc-bashrc" class="headerlink" title="10. 执行 /etc/bashrc"></a>10. 执行 /etc/bashrc</h3><blockquote>
<p>这个文件是bash环境的全局文件。几乎默认存在，每个登录的用户上去之后都要初始化一下bash的环境。<br>当bash shell被打开时,该文件被执行（即每次新开一个终端，都会执行bashrc）</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
            <category> Linux启动顺序 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>http://www.nice-jj.com/about/index.html</url>
      <content type="html"><![CDATA[<p>路漫漫其修远兮<br>联系我：957675270</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书]]></title>
      <url>http://www.nice-jj.com/reading/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
